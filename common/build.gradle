apply plugin: 'kotlin-multiplatform'
apply plugin: 'kotlinx-serialization'
apply plugin: 'org.jetbrains.kotlin.native.cocoapods'
apply plugin: 'co.touchlab.kotlinxcodesync'
apply plugin: 'com.squareup.sqldelight'
apply plugin: 'com.android.library'

kotlin {
    android()

    sourceSets {
        commonMain {
            dependencies {
                implementation "com.soywiz.korlibs.klock:klock:$klock_version"
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$serialization_version"
                implementation "com.squareup.sqldelight:runtime:$sqlDelight_version"
                implementation "io.ktor:ktor-client-core:$ktor_version"
                implementation "io.ktor:ktor-client-serialization:$ktor_version"
                implementation "io.ktor:ktor-client-logging:$ktor_version"
                api "io.xorum:ReKamp-kotlinMultiplatform:$reKamp_version"
            }
        }

        commonTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test-common:$kotlin_version"
            }
        }

        iOSMain {
            dependencies {
                implementation "com.squareup.sqldelight:native-driver:$sqlDelight_version"
                implementation "io.ktor:ktor-client-ios:$ktor_version"
            }
        }

        androidMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
                implementation "com.squareup.sqldelight:sqlite-driver:$sqlDelight_version"
                implementation "com.squareup.sqldelight:runtime-jvm:$sqlDelight_version"
            }
        }

        androidTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
                implementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
                implementation "junit:junit:4.13"
            }
        }
    }

    targets {
        def buildForDevice = project.findProperty("kotlin.native.cocoapods.target") == "ios_arm"
        if (buildForDevice) {
            iosArm32("iOS32")
            sourceSets["iOS32Main"].dependsOn(sourceSets.iOSMain)

            iosArm64("iOS64")
            sourceSets["iOS64Main"].dependsOn(sourceSets.iOSMain)
        } else {
            iosX64('iosX')
            sourceSets["iosXMain"].dependsOn(sourceSets.iOSMain)
        }
    }

    cocoapods {
        summary = "Codeforces WatchR common module"
        homepage = "https://github.com/xorum-io/codeforces_watcher"
    }
}

configurations {
    compileClasspath
}

android {
    compileSdkVersion 29
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
    }
}

xcode {
    projectPath = "../ios/Codeforces Watcher.xcodeproj"
    target = "Codeforces Watcher"
}

sqldelight {
    CWDatabase {
        packageName = "io.xorum.codeforceswatcher"
        sourceFolders = ["sqldelight"]
    }
}
